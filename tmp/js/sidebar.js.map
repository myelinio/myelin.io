{"version":3,"file":"sidebar.js","sourceRoot":"","sources":["../../src/ts/sidebar.ts"],"names":[],"mappings":";AAAA,+BAA+B;AAC/B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AAEjC,mDAAmD;AACnD,SAAS,aAAa;IAClB,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAI,CAAC,OAAO,EAAE;QACV,OAAO;KACV;IAED,4BAA4B;IAC5B,OAAO,CAAC,gBAAgB,CAAc,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC1D,IAAI,CAAC,gBAAgB,CAAc,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACnD,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;gBACjB,MAAM,MAAM,GAAG,CAAC,CAAC,aAA4B,CAAC;gBAC9C,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAChC,MAAM,IAAI,GAAG,MAAM,CAAC,kBAAkB,CAAC;gBACvC,IAAI,CAAC,IAAI,EAAE;oBACP,OAAO;iBACV;gBAED,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAiC,CAAC;gBAClD,IAAI,CAAC,EAAE,EAAE;oBACL,OAAO;iBACV;gBAED,eAAe,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;gBAElC,IAAI,EAAE,GAAG,EAAE,CAAC;gBACZ,GAAG;oBACC,EAAE,GAAG,EAAE,CAAC,aAA4B,CAAC;iBACxC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAEzC,uEAAuE;gBACvE,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;YAChD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,MAAM,OAAO,GAAkB,EAAE,CAAC;IAClC,OAAO,CAAC,gBAAgB,CAAc,SAAS,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC9D,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;IAEnC,SAAS,YAAY,CAAC,MAAmB;QACrC,MAAM,IAAI,GAAG,MAAM,CAAC,kBAAiC,CAAC;QACtD,IAAI,CAAC,IAAI,EAAE;YACP,OAAO;SACV;QAED,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAEtC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACjC,sCAAsC;YACtC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SACnD;aAAM;YACH,8BAA8B;YAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SAC/B;IACL,CAAC;IAED,wBAAwB;IACxB,OAAO,CAAC,gBAAgB,CAAc,SAAS,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QAC9D,IAAI,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACtC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE;gBACvB,YAAY,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE;gBACxB,MAAM,CAAC,GAAG,CAAkB,CAAC;gBAC7B,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;gBAEjB,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,EAAE;oBACpC,UAAU;iBACb;qBAAM,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACnB,IAAI,oBAAoB,CAAC,EAAE,CAAC,EAAE;wBAC1B,MAAM,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;qBACjC;iBACJ;qBAAM;oBACH,QAAQ,CAAC,CAAC,OAAO,EAAE;wBACf,KAAK,QAAQ,CAAC,EAAE;4BACZ,MAAM,CAAC,gBAAgB,EAAE,CAAC;4BAC1B,MAAM;wBAEV,KAAK,QAAQ,CAAC,IAAI;4BACd,MAAM,CAAC,gBAAgB,EAAE,CAAC;4BAC1B,MAAM;wBAEV,KAAK,QAAQ,CAAC,IAAI;4BACd,MAAM,CAAC,iBAAiB,EAAE,CAAC;4BAC3B,MAAM;wBAEV,KAAK,QAAQ,CAAC,GAAG;4BACb,MAAM,CAAC,gBAAgB,EAAE,CAAC;4BAC1B,MAAM;wBAEV,KAAK,QAAQ,CAAC,MAAM;4BAChB,YAAY,CAAC,MAAM,CAAC,CAAC;4BACrB,MAAM;wBAEV,KAAK,QAAQ,CAAC,GAAG;4BACb,OAAO;wBAEX;4BACI,IAAI,oBAAoB,CAAC,EAAE,CAAC,EAAE;gCAC1B,MAAM,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;6BACjC;4BACD,MAAM;qBACb;oBACD,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;iBACzB;YACL,CAAC,CAAC,CAAC;SACN;IACL,CAAC,CAAC,CAAC;IAEH,iCAAiC;IACjC,OAAO,CAAC,gBAAgB,CAAc,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC1D,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YACpC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,sBAAqC,CAAC;YAC1D,IAAI,MAAM,EAAE;gBACR,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;aACzC;SACJ;IACL,CAAC,CAAC,CAAC;IAEH,wBAAwB;IACxB,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;QAC1C,MAAM,EAAE,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACxC,IAAI,EAAE,EAAE;YACJ,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC5B,MAAM,IAAI,GAAI,CAAC,CAAC,aAA6B,CAAC,aAAa,CAAc,UAAU,CAAC,CAAC;YACrF,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACpC;SACJ;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,aAAa,EAAE,CAAC","sourcesContent":["// Copyright 2019 Istio Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Attach the event handlers to support the sidebar\nfunction handleSidebar(): void {\n    const sidebar = getById(\"sidebar\");\n    if (!sidebar) {\n        return;\n    }\n\n    // toggle subtree in sidebar\n    sidebar.querySelectorAll<HTMLElement>(\".body\").forEach(body => {\n        body.querySelectorAll<HTMLElement>(button).forEach(o => {\n            listen(o, click, e => {\n                const button = e.currentTarget as HTMLElement;\n                button.classList.toggle(\"show\");\n                const next = button.nextElementSibling;\n                if (!next) {\n                    return;\n                }\n\n                const ul = next.nextElementSibling as HTMLElement;\n                if (!ul) {\n                    return;\n                }\n\n                toggleAttribute(ul, ariaExpanded);\n\n                let el = ul;\n                do {\n                    el = el.parentElement as HTMLElement;\n                } while (!el.classList.contains(\"body\"));\n\n                // adjust the body's max height to the total size of the body's content\n                el.style.maxHeight = el.scrollHeight + \"px\";\n            });\n        });\n    });\n\n    const headers: HTMLElement[] = [];\n    sidebar.querySelectorAll<HTMLElement>(\".header\").forEach(header => {\n        headers.push(header);\n    });\n\n    const kbdnav = new KbdNav(headers);\n\n    function toggleHeader(header: HTMLElement): void {\n        const body = header.nextElementSibling as HTMLElement;\n        if (!body) {\n            return;\n        }\n\n        body.classList.toggle(\"show\");\n        toggleAttribute(header, ariaExpanded);\n\n        if (body.classList.contains(\"show\")) {\n            // set this as the limit for expansion\n            body.style.maxHeight = body.scrollHeight + \"px\";\n        } else {\n            // if was expanded, reset this\n            body.style.maxHeight = null;\n        }\n    }\n\n    // expand/collapse cards\n    sidebar.querySelectorAll<HTMLElement>(\".header\").forEach(header => {\n        if (header.classList.contains(\"dynamic\")) {\n            listen(header, click, () => {\n                toggleHeader(header);\n            });\n\n            listen(header, keydown, o => {\n                const e = o as KeyboardEvent;\n                const ch = e.key;\n\n                if (e.ctrlKey || e.altKey || e.metaKey) {\n                    // nothing\n                } else if (e.shiftKey) {\n                    if (isPrintableCharacter(ch)) {\n                        kbdnav.focusElementByChar(ch);\n                    }\n                } else {\n                    switch (e.keyCode) {\n                        case keyCodes.UP:\n                            kbdnav.focusPrevElement();\n                            break;\n\n                        case keyCodes.DOWN:\n                            kbdnav.focusNextElement();\n                            break;\n\n                        case keyCodes.HOME:\n                            kbdnav.focusFirstElement();\n                            break;\n\n                        case keyCodes.END:\n                            kbdnav.focusLastElement();\n                            break;\n\n                        case keyCodes.RETURN:\n                            toggleHeader(header);\n                            break;\n\n                        case keyCodes.TAB:\n                            return;\n\n                        default:\n                            if (isPrintableCharacter(ch)) {\n                                kbdnav.focusElementByChar(ch);\n                            }\n                            break;\n                    }\n                    e.preventDefault();\n                    e.cancelBubble = true;\n                }\n            });\n        }\n    });\n\n    // force expand the default cards\n    sidebar.querySelectorAll<HTMLElement>(\".body\").forEach(body => {\n        if (body.classList.contains(\"default\")) {\n            body.style.maxHeight = body.scrollHeight + \"px\";\n            body.classList.toggle(\"default\");\n            body.classList.toggle(\"show\");\n            const header = body.previousElementSibling as HTMLElement;\n            if (header) {\n                toggleAttribute(header, ariaExpanded);\n            }\n        }\n    });\n\n    // toggle sidebar on/off\n    listen(getById(\"sidebar-toggler\"), click, e => {\n        const sc = getById(\"sidebar-container\");\n        if (sc) {\n            sc.classList.toggle(active);\n            const icon = (e.currentTarget as HTMLElement).querySelector<HTMLElement>(\"svg.icon\");\n            if (icon) {\n                icon.classList.toggle(\"flipped\");\n            }\n        }\n    });\n}\n\nhandleSidebar();\n"]}