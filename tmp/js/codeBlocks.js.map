{"version":3,"file":"codeBlocks.js","sourceRoot":"","sources":["../../src/ts/codeBlocks.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 Istio Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ndeclare const buttonCopy: string;\ndeclare const buttonDownload: string;\ndeclare const buttonPrint: string;\ndeclare const docTitle: string;\ndeclare const branchName: string;\ndeclare const Prism: any;\n\nlet syntaxColoring = true;\n\n// All the voodoo needed to support our fancy code blocks\nfunction handleCodeBlocks() {\n    const toolbarShow = \"toolbar-show\";\n    const syntaxColoringCookie = \"syntax-coloring\";\n    const syntaxColoringItem = \"syntax-coloring-item\";\n\n    // Add a toolbar to all PRE blocks\n    function attachToolbar(pre: HTMLElement): void {\n        const copyButton = document.createElement(button);\n        copyButton.title = buttonCopy;\n        copyButton.className = \"copy\";\n        copyButton.innerHTML = \"<svg><use xlink:href='\" + iconFile + \"#copy'/></svg>\";\n        copyButton.setAttribute(ariaLabel, buttonCopy);\n        listen(copyButton, mouseenter, e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(copyButton, mouseleave, e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n        listen(copyButton, \"focus\", e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(copyButton, \"blur\", e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n        listen(copyButton, click, e => {\n            const div = (e.currentTarget as HTMLElement).parentElement;\n            if (div) {\n                const text = getToolbarDivText(div);\n                copyToClipboard(text);\n            }\n            return true;\n        });\n\n        const downloadButton = document.createElement(button);\n        downloadButton.title = buttonDownload;\n        downloadButton.className = \"download\";\n        downloadButton.innerHTML = \"<svg><use xlink:href='\" + iconFile + \"#download'/></svg>\";\n        downloadButton.setAttribute(ariaLabel, buttonDownload);\n        listen(downloadButton, mouseenter, e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(downloadButton, mouseleave, e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n        listen(downloadButton, \"focus\", e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(downloadButton, \"blur\", e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n\n        listen(downloadButton, click, e => {\n            const div = (e.currentTarget as HTMLElement).parentElement;\n            if (!div) {\n                return false;\n            }\n\n            const codes = div.getElementsByTagName(\"code\");\n            if ((codes !== null) && (codes.length > 0)) {\n                const code = codes[0];\n                if (!code) {\n                    return false;\n                }\n\n                const text = getToolbarDivText(div);\n                let downloadas = code.dataset.downloadas;\n                if (!downloadas || downloadas === \"\") {\n                    let lang = \"\";\n                    for (const cl of code.classList) {\n                        if (!cl) {\n                            continue;\n                        }\n\n                        if (cl.startsWith(\"language-\")) {\n                            lang = cl.substr(9);\n                            break;\n                        } else if (cl.startsWith(\"command-\")) {\n                            lang = \"bash\";\n                            break;\n                        }\n                    }\n\n                    if (lang === \"markdown\") {\n                        lang = \"md\";\n                    } else if (lang === \"\") {\n                        lang = \"txt\";\n                    }\n\n                    downloadas = docTitle + \".\" + lang;\n                }\n                saveFile(downloadas, text);\n            }\n            return true;\n        });\n\n        const printButton = document.createElement(button);\n        printButton.title = buttonPrint;\n        printButton.className = \"print\";\n        printButton.innerHTML = \"<svg><use xlink:href='\" + iconFile + \"#printer'/></svg>\";\n        printButton.setAttribute(ariaLabel, buttonPrint);\n        listen(printButton, mouseenter, e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(printButton, mouseleave, e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n        listen(printButton, \"focus\", e => (e.currentTarget as HTMLElement).classList.add(toolbarShow));\n        listen(printButton, \"blur\", e => (e.currentTarget as HTMLElement).classList.remove(toolbarShow));\n\n        listen(printButton, click, e => {\n            const div = (e.currentTarget as HTMLElement).parentElement;\n            if (div) {\n                const text = getToolbarDivText(div);\n                printText(text);\n            }\n            return true;\n        });\n\n        // wrap the PRE block in a DIV so we have a place to attach the toolbar buttons\n        const div = document.createElement(\"div\");\n        div.className = \"toolbar\";\n\n        const parent = pre.parentElement;\n        if (parent) {\n            parent.insertBefore(div, pre);\n        }\n        div.appendChild(pre);\n        div.appendChild(printButton);\n        div.appendChild(downloadButton);\n        div.appendChild(copyButton);\n\n        listen(pre, mouseenter, o => {\n            const e = o.currentTarget as HTMLElement;\n            const next0 = e.nextElementSibling as HTMLElement;\n            if (next0) {\n                next0.classList.add(toolbarShow);\n                const next1 = next0.nextElementSibling as HTMLElement;\n                if (next1) {\n                    next1.classList.add(toolbarShow);\n                    const next2 = next1.nextElementSibling as HTMLElement;\n                    if (next2) {\n                        next2.classList.add(toolbarShow);\n                    }\n                }\n            }\n        });\n\n        listen(pre, mouseleave, o => {\n            const e = o.currentTarget as HTMLElement;\n            const next0 = e.nextElementSibling as HTMLElement;\n            if (next0) {\n                next0.classList.remove(toolbarShow);\n                const next1 = next0.nextElementSibling as HTMLElement;\n                if (next1) {\n                    next1.classList.remove(toolbarShow);\n                    const next2 = next1.nextElementSibling as HTMLElement;\n                    if (next2) {\n                        next2.classList.remove(toolbarShow);\n                    }\n                }\n            }\n        });\n    }\n\n    function getToolbarDivText(div: HTMLElement): string {\n        const commands = div.getElementsByClassName(\"command\") as HTMLCollectionOf<HTMLElement>;\n        if ((commands !== null) && (commands.length > 0)) {\n            const inner = commands[0].innerText;\n            const lines = inner.split(\"\\n\");\n            let cmd = \"\";\n            for (let i = 0; i < lines.length; i++) {\n                if (lines[i].startsWith(\"$ \")) {\n                    lines[i] = lines[i].substring(2);\n                }\n\n                if (cmd !== \"\") {\n                    cmd += \"\\n\";\n                }\n\n                cmd += lines[i];\n            }\n\n            return cmd;\n        }\n\n        return div.innerText;\n    }\n\n    function applyTransformations(pre: HTMLElement): void {\n        const code = pre.firstElementChild as HTMLElement;\n        if (code == null) {\n            return;\n        }\n\n        let cl = \"\";\n        for (const o of code.classList) {\n            if (o && o.startsWith(\"language-bash\")) {\n                cl = o;\n                break;\n            }\n        }\n\n        if (cl !== \"\") {\n            let firstLineOfOutput = 0;\n            const lines = code.innerText.split(\"\\n\");\n            let cmd = \"\";\n            let escape = false;\n            let escapeUntilEOF = false;\n            let tmp = \"\";\n            for (let j = 0; j < lines.length; j++) {\n                const line = lines[j];\n\n                if (line.startsWith(\"$ \")) {\n                    if (tmp !== \"\") {\n                        if (syntaxColoring) {\n                            cmd += \"$ \" + Prism.highlight(tmp, Prism.languages.bash, \"bash\") + \"\\n\";\n                        } else {\n                            cmd += \"$ \" + tmp + \"\\n\";\n                        }\n                    }\n\n                    tmp = line.slice(2);\n\n                    if (line.includes(\"<<EOF\")) {\n                        escapeUntilEOF = true;\n                    }\n                } else if (escape) {\n                    // continuation\n                    tmp += \"\\n\" + line;\n\n                    if (line.includes(\"<<EOF\")) {\n                        escapeUntilEOF = true;\n                    }\n                } else if (escapeUntilEOF) {\n                    tmp += \"\\n\" + line;\n                    if (line === \"EOF\") {\n                        escapeUntilEOF = false;\n                    }\n                } else {\n                    firstLineOfOutput = j;\n                    break;\n                }\n\n                escape = line.endsWith(\"\\\\\");\n            }\n\n            if (tmp !== \"\") {\n                if (syntaxColoring) {\n                    cmd += \"$ \" + Prism.highlight(tmp, Prism.languages.bash, \"bash\") + \"\\n\";\n                } else {\n                    cmd += \"$ \" + tmp + \"\\n\";\n                    cmd = cmd.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n                }\n            }\n\n            if (cmd !== \"\") {\n                if (code.dataset.expandlinks === \"true\") {\n                    cmd = cmd.replace(/@(.*?)@/g, \"<a href='https://raw.githubusercontent.com/istio/istio/\" + branchName + \"/$1'>$1</a>\");\n                }\n\n                let html = \"<div class='command'>\" + cmd + \"</div>\";\n\n                let output = \"\";\n                if (firstLineOfOutput > 0) {\n                    for (let j = firstLineOfOutput; j < lines.length; j++) {\n                        if (output !== \"\") {\n                            output += \"\\n\";\n                        }\n                        output += lines[j];\n                    }\n                }\n\n                if (output !== \"\") {\n                    output = output.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n                    // apply formatting to the output?\n                    if (code.dataset.outputis) {\n                        if (syntaxColoring) {\n                            output = Prism.highlight(output, Prism.languages[code.dataset.outputis], code.dataset.outputis);\n                        }\n                    }\n\n                    html += \"<div class='output'>\" + output + \"</div>\";\n                }\n\n                code.innerHTML = html;\n                code.classList.remove(cl);\n                code.classList.add(\"command-output\");\n            } else if (syntaxColoring) {\n                // someone probably forgot to start a block with $, so let's just treat the whole thing as being a `bash` block\n                Prism.highlightElement(code, false);\n            }\n        } else if (syntaxColoring) {\n            // this isn't one of our special code blocks, so handle normally\n            Prism.highlightElement(code, false);\n        }\n    }\n\n    // Load the content of any externally-hosted PRE block\n    function loadExternal(pre: HTMLElement): void {\n        function fetchFile(elem: HTMLElement, url: string) {\n            fetch(url)\n                .then(response => {\n                    if (response.status !== 200) {\n                        return \"Unable to access \" + url + \": \" + response.statusText;\n                    }\n\n                    return response.text();\n                })\n                .catch(e => {\n                    return \"Unable to access \" + url + \": \" + e;\n                })\n                .then(data => {\n                    if (code.dataset.snippet) {\n                        const pattern = \"\\\\#.*?\\\\$snippet \" + code.dataset.snippet + \"\\\\n(.*?)\\\\n\\\\#.+?\\\\$endsnippet\";\n                        const regex = new RegExp(pattern, \"gms\");\n\n                        let buf = \"\";\n                        let match = regex.exec(data);\n                        while (match !== null) {\n                            if (buf !== \"\") {\n                                buf += \"\\n\";\n                            }\n                            buf += match[1];\n                            match = regex.exec(data);\n                        }\n                        data = buf;\n                    }\n\n                    elem.textContent = data;\n                    applyTransformations(pre);\n                });\n        }\n\n        const code = pre.firstElementChild as HTMLElement;\n        if (code && code.dataset.src) {\n            fetchFile(code, code.dataset.src);\n        }\n    }\n\n    function handleSyntaxColoringOption(): void {\n        const cookieValue = readCookie(syntaxColoringCookie);\n        if (cookieValue === \"true\") {\n            syntaxColoring = true;\n        } else if (cookieValue === \"false\") {\n            syntaxColoring = false;\n        }\n\n        const item = document.getElementById(syntaxColoringItem);\n        if (item) {\n            if (syntaxColoring) {\n                item.classList.add(active);\n            } else {\n                item.classList.remove(active);\n            }\n        }\n\n        listen(getById(syntaxColoringItem), click, () => {\n            createCookie(syntaxColoringCookie, syntaxColoring ? \"false\" : \"true\");\n            location.reload();\n        });\n    }\n\n    handleSyntaxColoringOption();\n\n    document.querySelectorAll<HTMLElement>(\"pre\").forEach(pre => {\n        attachToolbar(pre);\n        applyTransformations(pre);\n        loadExternal(pre);\n    });\n}\n\nhandleCodeBlocks();\n"]}