{"version":3,"file":"kbdnav.js","sourceRoot":"","sources":["../../src/ts/kbdnav.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 Istio Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nclass KbdNav {\n    private readonly elements: HTMLElement[];\n\n    constructor(elements: HTMLElement[]) {\n        this.elements = elements;\n    }\n\n    public focusFirstElement(): void {\n        this.elements[0].focus();\n    }\n\n    public focusLastElement(): void {\n        this.elements[this.elements.length - 1].focus();\n    }\n\n    public focusNextElement(): void {\n        for (let i = 0; i < this.elements.length; i++) {\n            if (this.elements[i] === document.activeElement) {\n                if (i < this.elements.length - 1) {\n                    this.elements[i + 1].focus();\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.focusFirstElement();\n    }\n\n    public focusPrevElement(): void {\n        for (let i = 0; i < this.elements.length; i++) {\n            if (this.elements[i] === document.activeElement) {\n                if (i > 0) {\n                    this.elements[i - 1].focus();\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.focusLastElement();\n    }\n\n    public focusElementByChar(ch: string): void {\n\n        function getIndexFirstChars(startIndex: number, elements: HTMLElement[]) {\n            for (let i = startIndex; i < elements.length; i++) {\n                const el = elements[i];\n                if (el && el.textContent) {\n                    const firstChar = el.textContent.trim().substring(0, 1).toLowerCase();\n                    if (ch === firstChar) {\n                        return i;\n                    }\n                }\n            }\n            return -1;\n        }\n\n        ch = ch.toLowerCase();\n        for (let i = 0; i < this.elements.length; i++) {\n            if (this.elements[i] === document.activeElement) {\n\n                // Check remaining slots in the strip\n                let index = getIndexFirstChars(i + 1, this.elements);\n\n                // If not found in remaining slots, check from beginning\n                if (index === -1) {\n                    index = getIndexFirstChars(0, this.elements);\n                }\n\n                // If match was found...\n                if (index > -1) {\n                    this.elements[index].focus();\n                }\n                break;\n            }\n        }\n    }\n}\n"]}